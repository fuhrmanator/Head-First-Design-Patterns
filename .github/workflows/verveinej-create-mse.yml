# Create a Famix Java model (MSE file) of the Java source in $SOURCE_ROOT using VerveineJ 
#   and push it (and the sources) to the gh-pages branch
on:  
  workflow_dispatch:
  push:
    branches: main
  pull_request:
    branches: main

name: Generate Famix Java Model with VerveineJ and push it (with sources) to gh-pages

permissions:
  contents: write

# define relative path of where VerveineJ should start its scan and place its MSE
env:
  SOURCE_ROOT: src
  VERVEINEJ_VERSION: v2.0.4

jobs:
  build-deploy:
    runs-on: ubuntu-22.04
    steps:
      # Check out the main project
      - name: Check out repository
        uses: actions/checkout@v3

      # Check out (install) VerveineJ into a project subdirectory where it will be run
      - name: Check out VerveineJ
        uses: actions/checkout@v3
        with:
          repository: moosetechnology/VerveineJ
          ref: ${{ env.VERVEINEJ_VERSION }}
          path: verveinej

      - name: Install java (for verveinej)
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Create a Famix Java model (MSE file)
        run: cd $GITHUB_WORKSPACE && verveinej/verveinej.sh -o FamixJavaModel_$VERVEINEJ_VERSION.mse $SOURCE_ROOT

      - name: Move model and copy sources to a folder for deployment
        run: |
          mkdir $GITHUB_WORKSPACE/__deploy &&\
            mv $GITHUB_WORKSPACE/FamixJavaModel_$VERVEINEJ_VERSION.mse $GITHUB_WORKSPACE/__deploy &&\
            cp -r $GITHUB_WORKSPACE/$SOURCE_ROOT $GITHUB_WORKSPACE/__deploy

      # Put the source and the MSE file into gh-pages branch
      - name: Push sources and Famix Java model to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: __deploy
